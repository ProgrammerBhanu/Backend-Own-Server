> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
test    0.000GB
1.find all movies which are equal to movie_name
> db.users.find({movie_name:{$eq:"Stella"}}).pretty()

2.find all movies which are not equal to movie_name
> db.users.find({"movie_name":{$ne:"Stella"}}).pretty()

3.find all movies greater than and greater than equal to a budget
> db.users.find({$and:[{budget:{$gt:11000}},{budget:{$gte:9000}}]}).pretty()

4.find all movies less than and less than equal to a budget
>db.users.find({$and:[{budget:{$lt:15000}},{budget:{$lte:20000}}]}).pretty()

5.find all movies that are produced after 2000 with budget greater than 10000
> db.users.find({$and:[{production_year:{$gt:2000}},{budget:{$gte:10000}}]}).pretty()
>db.users.find({$and:[{production_year:{$gt:2000}},{budget:{$gte:10000}}]}).sort({budget:1})

6.find all movies that are produced after 2000 or budget greater than 10000
>db.users.find({$or:[{production_year:{$gt:2000}},{budget:{$gte:10000}}]}).sort({budget:1}).pretty()

7.find all movies that are neither produced after 2000 nor with budget greater than 10000.
>db.users.find({$nor:[{production_year:{$gt:2000}},{budget:{$gt:10000}}]}).sort({budget:1}).pretty()

8.find all movies that are not produced in 2000 or they do not have budget of 10000
>db.users.find({$or:[{production_year:{$not:{$eq:2000}}},{budget:{$ne:10000}}]}).sort({production_year:1}).pretty()

9.find all movies that were produced from 2000 to 2010.
>db.users.find({$and:[{production_year:{$gt:2000}},{production_year: {$lt:2010}}]}).pretty()

10.Sort all movies descending based on the production year and if the year is same then alphabetically for their movie_names
>db.users.find().sort({production_year:-1},{movie_name:1}).pretty()

11.in query 10 skip the first 10 entries and fetch the next 5
>db.users.find().skip(10).limit(5).pretty()

12.remove movie genre from the first 10 movies in query 10.
>db.users.remove({_id:{ $in: db.collection.find().sort({timestamp:-1}).limit(10).map(a => a._id) }} )